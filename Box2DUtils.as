package{	import Box2D.Dynamics.b2World;	import Box2D.Dynamics.b2BodyDef;	import Box2D.Common.Math.b2Vec2;	import Box2D.Dynamics.b2Body;	import Box2D.Dynamics.b2FixtureDef;	import Box2D.Collision.Shapes.b2PolygonShape;	public class Box2DUtils {				public static const P2M:int = 30;		public static const DEG_TO_RAD:Number = Math.PI/180;				public static function P2MVector (x:Number, y:Number):b2Vec2 {				//trace((x)+" "+(y))			return b2Vec2.Make(x/Box2DUtils.P2M, y/Box2DUtils.P2M);		}				public static function createEdge (world:b2World, startX:int, startY:int, endX:int, endY:int):void {						var bodyDef:b2BodyDef = new b2BodyDef();			bodyDef.type = b2Body.b2_staticBody;			var edge:b2Body = world.CreateBody(bodyDef);			var vec1:b2Vec2 = new b2Vec2(startX/Box2DUtils.P2M, startY/Box2DUtils.P2M);			var vec2:b2Vec2 = new b2Vec2(endX/Box2DUtils.P2M, endY/Box2DUtils.P2M);;			var bodyShape:b2PolygonShape = new b2PolygonShape();			var fixture:b2FixtureDef = new b2FixtureDef();			bodyShape.SetAsEdge(vec1, vec2);			fixture.shape = bodyShape;			fixture.restitution = .3;			edge.CreateFixture(fixture);		}	}}